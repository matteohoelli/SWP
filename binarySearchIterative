package iterativ;

//https://www.delftstack.com/de/howto/java/java-binary-search-iterative-and-recursive/

class BinarySearch {
    public static int counter = 0;
	int binarySearch(int arr[], int x)
    {
    	int counter = 0;
        int lo = 0, hi = arr.length - 1;
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;

            if (arr[mid] == x) {
            	System.out.println("gefunden");
            	return mid;
            }

            if (arr[mid] < x) {
            	counter++;
            	System.out.println("groesser |" + " Schritt: " + counter);
            	lo = mid + 1;
            	
            }

            else {
            	counter++;
            	System.out.println("kleiner |" + " Schritt: " + counter);
            	hi = mid - 1;
            	
            }
        }
        return -1;
    }
    
    public static int[] createArray (int laenge) {
    	int ar[] = new int[laenge];
		for(int i = 0; i < ar.length; i++){
			ar[i] = i+1;
		}
		return ar;
    }
    public static void ausgabe(int[] ar2) {
    	for(int i = 0; i < ar2.length; i++) {
    		System.out.print(ar2[i]+"");
    	}
    }

    public static void main(String args[])
    {
    	
        BinarySearch ob = new BinarySearch();
        
        int arr[] = createArray(10);
        BinarySearch.ausgabe(arr);
        int n = arr.length;
        int x = 2;
        int position = ob.binarySearch(arr, x);
        if (position == -1)
            System.out.println("Element not present");
        else
            System.out.println("Element found at index: " + position);
    }
}
